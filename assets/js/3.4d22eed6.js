(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{54:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"options"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#options","aria-hidden":"true"}},[t._v("#")]),t._v(" Options")]),n("p",[t._v("Here are all the options available when configuring the module and their default values:")]),n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// vue-i18n configuration")]),t._v("\n  vueI18n"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// List of locales supported by your app")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// This can either be an array of codes: ['en', 'fr', 'es']")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Or an array of objects for more complex configurations:")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// [")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("//   { code: 'en', iso: 'en-US', file: 'en.js' },")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("//   { code: 'fr', iso: 'fr-FR', file: 'fr.js' },")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("//   { code: 'es', iso: 'es-ES', file: 'es.js' }")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// ]")]),t._v("\n  locales"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// The app's default locale, URLs for this locale won't have a prefix if")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// strategy is prefix_except_default")]),t._v("\n  defaultLocale"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Separator used to generated routes name for each locale, you shouldn't")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// need to change this")]),t._v("\n  routesNameSeparator"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'___'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Routes generation strategy, can be set to one of the following:")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// - 'prefix_except_default': add locale prefix for every locale except default")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// - 'prefix': add locale prefix for every locale")]),t._v("\n  strategy"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'prefix_except_default'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Wether or not the translations should be lazy-loaded, if this is enabled,")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// you MUST configure langDir option, and locales must be an array of objects,")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// each containing a file key")]),t._v("\n  lazy"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Directory that contains translations files when lazy-loading messages,")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// this CAN NOT be empty if lazy-loading is enabled")]),t._v("\n  langDir"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Set this to a path to which you want to redirect users accessing root URL (/)")]),t._v("\n  rootRedirect"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Enable browser language detection to automatically redirect user")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// to their preferred language as they visit your app for the first time")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Set to false to disable")]),t._v("\n  detectBrowserLanguage"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// If enabled, a cookie is set once a user has been redirected to his")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// preferred language to prevent subsequent redirections")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// Set to false to redirect every time")]),t._v("\n    useCookie"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// Cookie name")]),t._v("\n    cookieKey"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'i18n_redirected'")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Set this to true if you're using different domains for each language")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// If enabled, no prefix is added to your routes and you MUST configure locales")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// as an array of objects, each containing a domain key")]),t._v("\n  differentDomains"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("false")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// If true, SEO metadata is generated for routes that have i18n enabled")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Set to false to disable app-wide")]),t._v("\n  seo"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// By default a store module is registered and kept in sync with the")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// app's i18n current state")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Set to false to disable")]),t._v("\n  vuex"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{attrs:{class:"token comment"}},[t._v("// Module namespace")]),t._v("\n    moduleName"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'i18n'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    \n    "),n("span",{attrs:{class:"token comment"}},[t._v("// Mutations config")]),t._v("\n    mutations"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{attrs:{class:"token comment"}},[t._v("// Mutation to commit to store current locale, set to false to disable")]),t._v("\n      setLocale"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'I18N_SET_LOCALE'")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n      "),n("span",{attrs:{class:"token comment"}},[t._v("// Mutation to commit to store current message, set to false to disable")]),t._v("\n      setMessages"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token string"}},[t._v("'I18N_SET_MESSAGES'")]),t._v("\n    "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// By default, custom routes are extracted from page files using acorn parsing,")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// set this to false to disable this")]),t._v("\n  parsePages"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token boolean"}},[t._v("true")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// If parsePages option is disabled, the module will look for custom routes in")]),t._v("\n  "),n("span",{attrs:{class:"token comment"}},[t._v('// the pages option, refer to the "Routing" section for usage')]),t._v("\n  pages"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Called right before app's locale changes")]),t._v("\n  beforeLanguageSwitch"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),n("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),n("span",{attrs:{class:"token comment"}},[t._v("// Called after app's locale has changed")]),t._v("\n  onLanguageSwitched"),n("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n"),n("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],!1,null,null,null);s.default=e.exports}}]);